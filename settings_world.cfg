% WORLD
  debug = 0                                  #(bool) run world in debug mode (if available)
  worldType = HHP                            #(string) world to be used, [HHP]

% WORLD_HHP
  ParasiteRelationship = -1.0                #(double) What is the relationship between host and parasite? 
                                             #  -1.0: (default) parasites remove all resource gained from host
                                             #   0.0: 'parasites' do not steal resources from hosts (commensalism)
                                             #   1.0: hosts gain additional resource when 'parasites' gain resource (mutualism)
  resourceInflow = 20.0                      #(double) how much resource does each location in the world have every update. Cats and dogs get their own resources.
                                             #  Resources are not maintained between updates

% WORLD_HHP_CATS
  catFleaFeedAmt = 0.01                      #(double) percentage of a cats resources one parasite will take with a perfect match
  catLifeMax = 30.0                          #(double) cat lifespan maximum
  catLifeMin = 12.0                          #(double) cat lifespan minimum
  catMaxToShareWithFleas = 0.5               #(double) total % of a cats resource that can be taken by fleas. If fleas would take more then this amount, fleas consumption
                                             #  is normalized
  reproductionThresholdCat = 120.0           #(double) required resources for a cat to reproduce

% WORLD_HHP_DOGS
  dogFleaFeedAmt = 0.01                      #(double) percentage of a dogs resources one parasite will take with a perfect match
  dogLifeMax = 30.0                          #(double) dog lifespan maximum
  dogLifeMin = 12.0                          #(double) dog lifespan minimum
  dogMaxToShareWithFleas = 0.5               #(double) total % of a dogs resource that can be taken by fleas. If fleas would take more then this amount, fleas consumption
                                             #  is normalized
  reproductionThresholdDog = 120.0           #(double) required resources for a dog to reproduce

% WORLD_HHP_FLEAS
  fleaLifeMax = 20.0                         #(double) flea lifespan maximum
  fleaLifeMin = 10.0                         #(double) flea lifespan minimum
  reproductionThresholdFlea = 0.1            #(double) required resources for a flea to reproduce

% WORLD_HHP_GENETICS
  initCatLock = all_0                        #(string) how should cat keys be initialized (all_0,all_1, or random)
  initCatLockLength = 30                     #(int) number of bits for a cat's beginning lock string
  initDogLock = all_1                        #(string) how should cat keys be initialized (all_0,all_1, or random)
  initDogLockLength = 30                     #(int) number of bits for a dog's beginning lock string
  initFleaKey = random                       #(string) how should cat keys be initialized (all_0,all_1, or random)
  initFleaKeyLength = 40                     #(int) number of bits for a flea's beginning key string

% WORLD_HHP_INFECTION
  ParasitesStartOnCats = 1.0                 #(double) % of parasites that start on cats (as opposed to dogs)
  parasiteInheritanceCat = 0.25              #(double) percentage of a dogs fleas that migrate to an offspring
  parasiteInheritanceDog = 0.25              #(double) percentage of a cats fleas that migrate to an offspring
  rateOfContactAcrossSpecies = 0X0,5000X.05  #(string) Rate per host in a location that contacts occur without regard  to host type.
                                             #  format is a list timeXvalue,timeXvalue,... where time is in updates
  rateOfContactInSpecies = 0X.2              #(string) Rate per host in a location that contacts occur within a single host type.
                                             #  format is a list timeXvalue,timeXvalue,... where time is in updates
  rateOfTransfer = 0.25                      #(double) when contact occurs, what % of each hosts parasites are transfered to the other. -1 will result in exactly
                                             #  1

% WORLD_HHP_IO
  recordGenomesStep = 10000                  #(int) record genomes csv when update % recordGenomesStep == 0, if -1, do not record status
  recordImageStep = -1                       #(int) record world images when update % recordImageStep == 0, if -1, do not record images
  recordWorldStateStep = 10                  #(int) record world state csv when update % recordWorldStateStep == 0, if -1, do not record status

% WORLD_HHP_MUTATION
  mutationPointCat = 0.005                   #(double) the point flip per site mutation rate
  mutationPointDog = 0.005                   #(double) the point flip per site mutation rate
  mutationPointFlea = 0.025                  #(double) the point flip per site mutation rate
  mutationSizeCat = 0.0                      #(double) the insertion/deletion per site mutation rate
  mutationSizeDog = 0.0                      #(double) the point insertion/deletion per site mutation rate
  mutationSizeFlea = 0.01                    #(double) the point insertion/deletion per site mutation rate

% WORLD_HHP_SPACE
  moveRateCat = 0.3                          #(double) move rate for cats
  moveRateDog = 0.3                          #(double) move rate for dogs
  turnRateCat = 0.02                         #(double) how often cats switch direction
  turnRateDog = 0.02                         #(double) how often dogs switch direction
  worldWraps = 1                             #(bool) does the world wrap?
  worldX = 15                                #(int) size in X of world
  worldY = 15                                #(int) size in Y of world

% WORLD_HHP_TUNING
  cullParasitesTo = 50                       #(int) If a host has this many (or more) parasites, parasites will not reproduce on that host
  mutationEraseRate = 0.5                    #(double) when genomes experiance insertion/deletion mutations, they will delete at this rate
  scoreList = 1,.8,.7,.6,.6,.5,.5,.4,.4,.4,.3,.3,.3,.2,.2,.2,.1,.1,.1,.0 #(string) When bitStrings are compaired, scoreList determins return values, where:
                                             #  scoreList[0] is the value if there is a perfect match,
                                             #  scoreList[1] is the value if the match is off by 1, etc.
                                             #  The last number in the list will be repreated if more values are needed

